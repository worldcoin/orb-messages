syntax = "proto3";

import "mcu_messaging_common.proto";
import "mcu_messaging_sec_priv.proto";

enum Version {
    VERSION_0 = 0;
}

message McuMessage
{
    Version version = 1;
    oneof message
    {
        ToMcu jetson_to_sec_message = 4;
        ToJetson sec_to_jetson_message = 5;
    }
}

message ToMcu
{
    uint32 ack_number = 1; // monotonically incrementing number. We will
    // acknowledge all messages
    oneof payload
    {
        RebootWithDelay reboot = 3;
        FirmwareUpdateData dfu_block = 4;
        Heartbeat heartbeat = 5;
        SERequest se_request = 6;
        FirmwareImageCheck fw_image_check = 20;
        FirmwareActivateSecondary fw_image_secondary_activate = 21;
        ValueGet value_get = 22;
        FirmwareConfirmPrimary fw_image_primary_confirm = 23;
    }
}

message ToJetson
{
    reserved 6; // used in previous versions

    oneof payload
    {
        Ack ack = 1;
        Versions versions = 2;
        Log log = 3;
        private.SEResponse se_response = 4;
        private.Tamper tampered = 5;
        BatteryStatus battery_status = 7;
        FatalError fatal_error = 8;
        private.TamperRaw tamper_raw = 9;
        private.TamperStates tamper_states = 10;
        Temperature temperature = 11;
    }
}

message SERequest
{
    enum RequestType {
        READ_WRITE = 0;
        CLEAR_READ_BUFFER = 1;
        POWER_CYCLE = 2;
    };
    uint32 id = 1;
    bytes data = 2;
    uint32 rx_length = 3;
    RequestType request_type = 4;
}
